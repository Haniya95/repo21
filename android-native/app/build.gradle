plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' // Will use 2.0.0 from project-level build.gradle
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.compose' // Apply the Compose plugin
}

android {
    namespace 'com.retro.calculator' // Ensure this is your actual namespace
    compileSdk 36 // Or your current compileSdk

    defaultConfig {
        applicationId "com.retro.calculator" // Ensure this is your actual application ID
        minSdk 24
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true // Recommended for release builds
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Ensure you have a proper signing configuration for release builds
            // signingConfig signingConfigs.release // Example
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    kotlinOptions {
        jvmTarget = '21'
    }

    buildFeatures {
        compose true
        viewBinding true // Keep if you use ViewBinding
    }

    // The old `composeOptions` block has been REMOVED.
    // The new Compose Compiler Gradle plugin (version 2.0.0) is expected
    // to manage the compiler extension version implicitly when its version
    // matches the Kotlin version.

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // CORE ANDROIDX LIBRARIES
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'
    implementation 'androidx.activity:activity-compose:1.9.2'

    // COMPOSE BOM (Bill of Materials) - manages versions for Compose libraries
    // Make sure to use the latest stable Compose BOM version
    def composeBom = platform('androidx.compose:compose-bom:2024.10.00') // Check for the latest version
    implementation composeBom
    androidTestImplementation composeBom // For testing

    // COMPOSE UI LIBRARIES (versions managed by BOM)
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3' // For Material Design 3
    // implementation 'androidx.compose.material:material' // If you are still on Material Design 2
    implementation 'androidx.compose.material:material-icons-extended' // For extended Material icons

    // COMPOSE NAVIGATION & VIEWMODEL
    implementation 'androidx.navigation:navigation-compose:2.8.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.8.6'

    // OTHER COMPOSE UTILITIES (if needed)
    implementation 'androidx.compose.runtime:runtime-livedata:1.7.4'
    implementation 'androidx.compose.animation:animation:1.7.4'

    // ACCOMPANIST (if you use any, check for compatibility or official alternatives)
    // implementation 'com.google.accompanist:accompanist-systemuicontroller:0.34.0' // Example

    // XML VIEW LIBRARIES (if your project still uses them)
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // TESTING LIBRARIES
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4' // For Compose UI tests

    // DEBUG IMPLEMENTATIONS (for development builds only)
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}